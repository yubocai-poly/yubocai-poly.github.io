<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computational Mathematics | Yubo CAI 蔡宇博</title>
    <link>https://example.com/tag/computational-mathematics/</link>
      <atom:link href="https://example.com/tag/computational-mathematics/index.xml" rel="self" type="application/rss+xml" />
    <description>Computational Mathematics</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 27 Aug 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Computational Mathematics</title>
      <link>https://example.com/tag/computational-mathematics/</link>
    </image>
    
    <item>
      <title>Research Porject about Acceleration of the solution of Fractional Diffusion Equations in time</title>
      <link>https://example.com/project/inria/</link>
      <pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/project/inria/</guid>
      <description>&lt;p&gt;This research project is under the supervision of Professor Olivier about his new method and algorithms in the numerical solution of time-fractional diffusion equation. Our overall thinking is based on these two papers: &lt;a href=&#34;https://arxiv.org/abs/2106.14146&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paper1&lt;/a&gt; and &lt;a href=&#34;https://www.cambridge.org/core/journals/communications-in-computational-physics/article/abs/fast-evaluation-of-the-caputo-fractional-derivative-and-its-applications-to-fractional-diffusion-equations/AF5FDC74FD7A010ED0ACD291BB1A92B1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paper2&lt;/a&gt;. Professor has already accomplished the algorithms in paper1 with a complexity of $O(N_{T}N_{S})$ and has been tested in multiple dimensions in C++. However, the paper2 came up an new algorithms with higher effiency and complexity. The algorithms is accomplished in Matlab.&lt;/p&gt;
&lt;p&gt;$$
\partial_t u(x, t)-\nabla \cdot\left(\partial_t^{1-\alpha} \kappa_\alpha \nabla u-\boldsymbol{F} \partial_t^{1-\alpha} u\right)(x, t)=f(x, t), \quad \text { for } x \in \Omega \text { and } 0&amp;lt;t&amp;lt;T
$$&lt;/p&gt;
&lt;p&gt;My job was about the topics of optimization of the computing algorithms of the time-fractional diffusion equation. My work was based on the newly proposed more efficient Caputo fractional derivative numerical method for a time-fractional equation using Matlab to implement the algorithm in one and two dimensions. And I convert the Matlab code to C++, integrate it with the original code of the second-order accurate scheme algorithms, and test it. This work has succeeded in reducing the complexity of the code from $O(N_{T}N_{S})$ to $O(N_{S} \cdot logN_{T})$ in dimensions 1 and 2 and significantly reduces the space complexity.&lt;/p&gt;
&lt;p&gt;However, due to certain reason and time restriction of the project. We only accomplished the code transfer and we trying to improve our merged algorithms in the future.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
